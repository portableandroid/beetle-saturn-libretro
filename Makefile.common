SOURCES_CXX :=
SOURCES_C   :=

DEPS_DIR     := $(CORE_DIR)/deps
LIBRETRO_DIR := $(CORE_DIR)/libretro-common
MEDNAFEN_DIR := $(CORE_DIR)/mednafen
CORE_EMU_DIR := $(MEDNAFEN_DIR)/ss
CDROM_DIR    := $(MEDNAFEN_DIR)/cdrom

INCFLAGS := -I$(CORE_DIR) \
	         -I$(MEDNAFEN_DIR) \
				-I$(MEDNAFEN_DIR)/include \
				-I$(MEDNAFEN_DIR)/intl \
				-I$(MEDNAFEN_DIR)/hw_sound \
				-I$(MEDNAFEN_DIR)/hw_cpu \
				-I$(MEDNAFEN_DIR)/hw_misc \
				-I$(LIBRETRO_DIR)/include

ZLIB_INCFLAGS = -I$(DEPS_DIR)/zlib-1.2.11

ZLIB_SOURCES_C = \
		$(DEPS_DIR)/zlib-1.2.11/adler32.c \
		$(DEPS_DIR)/zlib-1.2.11/crc32.c \
		$(DEPS_DIR)/zlib-1.2.11/inffast.c \
		$(DEPS_DIR)/zlib-1.2.11/inflate.c \
		$(DEPS_DIR)/zlib-1.2.11/inftrees.c \
		$(DEPS_DIR)/zlib-1.2.11/zutil.c

ifeq ($(HAVE_GRIFFIN),1)
SOURCES_CXX += beetle_ss_griffin.cpp

SOURCES_C += beetle_ss_griffin_c.c
endif

ifeq ($(HAVE_CDROM), 1)
   FLAGS += -DHAVE_CDROM

   SOURCES_C += $(LIBRETRO_DIR)/cdrom/cdrom.c \
                $(LIBRETRO_DIR)/vfs/vfs_implementation_cdrom.c

   ifeq ($(CDROM_DEBUG), 1)
      FLAGS += -DCDROM_DEBUG
   endif
endif

ifeq ($(NEED_THREADING), 1)
   FLAGS += -DWANT_THREADING -DHAVE_THREADS
endif

ifeq ($(NEED_CRC32), 1)
   FLAGS += -DWANT_CRC32
	SOURCES_C += $(CORE_DIR)/scrc32.c
endif

ifeq ($(NEED_DEINTERLACER), 1)
   FLAGS += -DNEED_DEINTERLACER
endif

ifeq ($(IS_64BIT), 1)
FLAGS += -DSIZEOF_VOID_P=8
else
FLAGS += -DSIZEOF_VOID_P=4
endif

ifeq ($(IS_X86), 1)
FLAGS += -DARCH_X86
endif

ifeq ($(NEED_BPP), 8)
FLAGS += -DWANT_8BPP
endif

ifeq ($(NEED_BPP), 16)
FLAGS += -DWANT_16BPP
endif

ifeq ($(NEED_BPP), 32)
FLAGS += -DWANT_32BPP
endif

ifeq ($(WANT_NEW_API), 1)
FLAGS += -DWANT_NEW_API
endif

ifeq ($(NO_COMPUTED_GOTO), 1)
FLAGS += -DNO_COMPUTED_GOTO
endif

ifeq ($(FRONTEND_SUPPORTS_RGB565), 1)
FLAGS += -DFRONTEND_SUPPORTS_RGB565
endif

ifeq ($(NEED_CD), 1)
   FLAGS += -DNEED_CD
endif

ifeq ($(HAVE_CHD), 1)
   FLAGS += -DHAVE_CHD -D_7ZIP_ST
   INCFLAGS += \
   -I$(DEPS_DIR)/lzma-19.00/include \
   -I$(DEPS_DIR)/libchdr/include
endif

ifeq ($(NEED_TREMOR), 1)
   FLAGS += -DNEED_TREMOR
endif

ifneq ($(HAVE_GRIFFIN), 1)
   SOURCES_CXX += \
	$(CORE_EMU_DIR)/db.cpp \
	$(CORE_EMU_DIR)/cdb.cpp \
	$(CORE_EMU_DIR)/sound.cpp \
	$(CORE_EMU_DIR)/cart.cpp \
	$(CORE_EMU_DIR)/scu_dsp_gen.cpp \
	$(CORE_EMU_DIR)/scu_dsp_mvi.cpp \
	$(CORE_EMU_DIR)/scu_dsp_jmp.cpp \
	$(CORE_EMU_DIR)/scu_dsp_misc.cpp \
	$(CORE_EMU_DIR)/vdp1.cpp \
	$(CORE_EMU_DIR)/vdp1_line.cpp \
	$(CORE_EMU_DIR)/vdp1_sprite.cpp \
	$(CORE_EMU_DIR)/vdp1_poly.cpp \
	$(CORE_EMU_DIR)/vdp2.cpp \
	$(CORE_EMU_DIR)/vdp2_render.cpp \
	$(CORE_EMU_DIR)/smpc.cpp \
	$(CORE_EMU_DIR)/input/gamepad.cpp \
	$(CORE_EMU_DIR)/input/gun.cpp \
	$(CORE_EMU_DIR)/input/3dpad.cpp \
	$(CORE_EMU_DIR)/input/mouse.cpp \
	$(CORE_EMU_DIR)/input/multitap.cpp \
	$(CORE_EMU_DIR)/input/mission.cpp \
	$(CORE_EMU_DIR)/input/keyboard.cpp \
	$(CORE_EMU_DIR)/input/jpkeyboard.cpp \
	$(CORE_EMU_DIR)/input/wheel.cpp

SOURCES_CXX += \
					$(CORE_EMU_DIR)/cart/backup.cpp \
					$(CORE_EMU_DIR)/cart/cs1ram.cpp \
					$(CORE_EMU_DIR)/cart/debug.cpp \
					$(CORE_EMU_DIR)/cart/extram.cpp \
					$(CORE_EMU_DIR)/cart/rom.cpp \
					$(CORE_EMU_DIR)/cart/ar4mp.cpp

SOURCES_CXX += $(MEDNAFEN_DIR)/hw_cpu/m68k/m68k.cpp

SOURCES_C += $(CORE_DIR)/libretro_cbs.c

ifeq ($(NEED_TREMOR), 1)
   SOURCES_C += $(wildcard $(MEDNAFEN_DIR)/tremor/*.c)
endif

ifneq ($(HAVE_GRIFFIN),1)
SOURCES_CXX += $(CDROM_DIR)/CDAccess.cpp \
	$(CDROM_DIR)/CDAccess_Image.cpp \
	$(CDROM_DIR)/CDAccess_CCD.cpp \
	$(CDROM_DIR)/CDAFReader.cpp \
	$(CDROM_DIR)/CDAFReader_Vorbis.cpp \
	$(CDROM_DIR)/cdromif.cpp \
	$(CDROM_DIR)/CDUtility.cpp \
	$(CDROM_DIR)/lec.cpp \
	$(CDROM_DIR)/galois.cpp \
	$(CDROM_DIR)/recover-raw.cpp \
	$(CDROM_DIR)/l-ec.cpp \
	$(CDROM_DIR)/edc_crc32.cpp
endif
   FLAGS += -DNEED_CD

ifeq ($(HAVE_CHD), 1)
SOURCES_C += \
	$(DEPS_DIR)/lzma-19.00/src/Alloc.c \
	$(DEPS_DIR)/lzma-19.00/src/Bra86.c \
	$(DEPS_DIR)/lzma-19.00/src/BraIA64.c \
	$(DEPS_DIR)/lzma-19.00/src/CpuArch.c \
	$(DEPS_DIR)/lzma-19.00/src/Delta.c \
	$(DEPS_DIR)/lzma-19.00/src/LzFind.c \
	$(DEPS_DIR)/lzma-19.00/src/Lzma86Dec.c \
	$(DEPS_DIR)/lzma-19.00/src/LzmaDec.c \
	$(DEPS_DIR)/lzma-19.00/src/LzmaEnc.c \
	$(DEPS_DIR)/libchdr/src/libchdr_bitstream.c \
	$(DEPS_DIR)/libchdr/src/libchdr_cdrom.c \
	$(DEPS_DIR)/libchdr/src/libchdr_chd.c \
	$(DEPS_DIR)/libchdr/src/libchdr_flac.c \
	$(DEPS_DIR)/libchdr/src/libchdr_huffman.c

SOURCES_CXX += \
	$(CDROM_DIR)/CDAccess_CHD.cpp
endif

SOURCES_CXX += \
	$(MEDNAFEN_DIR)/error.cpp \
	$(MEDNAFEN_DIR)/general.cpp \
	$(MEDNAFEN_DIR)/FileStream.cpp \
	$(MEDNAFEN_DIR)/MemoryStream.cpp \
	$(MEDNAFEN_DIR)/Stream.cpp \
	$(MEDNAFEN_DIR)/state.cpp \
	$(MEDNAFEN_DIR)/mempatcher.cpp \
	$(MEDNAFEN_DIR)/video/Deinterlacer.cpp \
	$(MEDNAFEN_DIR)/video/surface.cpp \
	$(MEDNAFEN_DIR)/git.cpp \
	$(CORE_DIR)/disc.cpp \
	$(CORE_DIR)/input.cpp \
	$(CORE_DIR)/libretro.cpp \
	$(CORE_DIR)/libretro_settings.cpp

SOURCES_C += $(MEDNAFEN_DIR)/mednafen-endian.c \
				 $(MEDNAFEN_DIR)/settings.c

SOURCES_CXX += $(MEDNAFEN_DIR)/hash/sha256.cpp \
					$(MEDNAFEN_DIR)/hash/md5.cpp

ifeq ($(SYSTEM_ZLIB), 1)
	INCFLAGS += $(shell pkg-config --cflags zlib)
	LIBS += $(shell pkg-config --libs zlib)
else
	INCFLAGS += $(ZLIB_INCFLAGS)
	SOURCES_C += $(ZLIB_SOURCES_C)
endif

ifneq ($(STATIC_LINKING), 1)
SOURCES_C += $(LIBRETRO_DIR)/streams/file_stream.c \
				 $(LIBRETRO_DIR)/streams/file_stream_transforms.c \
				 $(LIBRETRO_DIR)/file/file_path.c \
				 $(LIBRETRO_DIR)/file/retro_dirent.c \
				 $(LIBRETRO_DIR)/lists/dir_list.c \
				 $(LIBRETRO_DIR)/lists/string_list.c \
				 $(LIBRETRO_DIR)/vfs/vfs_implementation.c \
				 $(LIBRETRO_DIR)/compat/compat_strl.c \
				 $(LIBRETRO_DIR)/compat/compat_strcasestr.c \
				 $(LIBRETRO_DIR)/compat/compat_posix_string.c \
				 $(LIBRETRO_DIR)/compat/fopen_utf8.c \
				 $(LIBRETRO_DIR)/encodings/encoding_utf.c \
				 $(LIBRETRO_DIR)/memmap/memalign.c \
				 $(LIBRETRO_DIR)/string/stdstring.c \
				 $(LIBRETRO_DIR)/time/rtime.c

ifeq ($(NEED_THREADING), 1)
SOURCES_C += $(LIBRETRO_DIR)/rthreads/rthreads.c \
				 $(LIBRETRO_DIR)/rthreads/rsemaphore.c
endif

endif
endif

